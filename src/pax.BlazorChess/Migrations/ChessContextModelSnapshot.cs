// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pax.BlazorChess.Models;

#nullable disable

namespace pax.BlazorChess.Migrations
{
    [DbContext(typeof(ChessContext))]
    partial class ChessContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("DbGameDbPosition", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PositionsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GamesId", "PositionsId");

                    b.HasIndex("PositionsId");

                    b.ToTable("DbGameDbPosition");
                });

            modelBuilder.Entity("pax.chess.DbGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Annotator")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Black")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<short>("BlackElo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ECO")
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<string>("EngineMoves")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Event")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("HalfMoves")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Opening")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<byte>("Result")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Site")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<byte>("Termination")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TimeControl")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("UTCDate")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("UTCTime")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Variant")
                        .HasColumnType("INTEGER");

                    b.Property<string>("White")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<short>("WhiteElo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("pax.chess.DbPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Position")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Position")
                        .IsUnique();

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("DbGameDbPosition", b =>
                {
                    b.HasOne("pax.chess.DbGame", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pax.chess.DbPosition", null)
                        .WithMany()
                        .HasForeignKey("PositionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
